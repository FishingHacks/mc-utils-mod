plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}

repositories {
    maven { url = 'https://maven.skye.vg/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    // NOTE: E4MC somehow breaks everythign... figurte out why e4mc breaks everything (unless i do modLocalRuntime i think?, then it breaks e4mc ;w;).
    // TODO: figure out if this also happens after building the mod and testing in a more normal environment (e.g. through prismlauncher)
    compileOnly "link.e4mc:e4mc_minecraft-fabric:5.3.1"

    compileOnly 'com.electronwill.night-config:core:3.7.0'
    compileOnly 'com.electronwill.night-config:toml:3.7.0'
    include 'com.electronwill.night-config:core:3.7.0'
    include 'com.electronwill.night-config:toml:3.7.0'
    localRuntime 'com.electronwill.night-config:core:3.7.0'
    localRuntime 'com.electronwill.night-config:toml:3.7.0'

    implementation "ca.weblite:java-objc-bridge:1.0.0"
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}